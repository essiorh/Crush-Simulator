{"ast":null,"code":"var _jsxFileName = \"/app/frontend/src/components/ParticleSystem.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ParticleSystem = ({\n  particles\n}) => {\n  _s();\n  const [activeParticles, setActiveParticles] = useState([]);\n  const [particleConfig, setParticleConfig] = useState({\n    gravity: 0.5,\n    airResistance: 0.98,\n    bounceDeceleration: 0.7,\n    minLife: 2000,\n    maxLife: 4000\n  });\n\n  // Update particles physics\n  useEffect(() => {\n    if (particles.length === 0) return;\n    const updateParticles = () => {\n      setActiveParticles(prev => prev.map(particle => {\n        // Apply physics\n        const newVy = particle.vy + particleConfig.gravity;\n        const newVx = particle.vx * particleConfig.airResistance;\n        let newX = particle.x + newVx;\n        let newY = particle.y + newVy;\n\n        // Boundary collision (simple bounce)\n        const bounds = {\n          width: window.innerWidth,\n          height: window.innerHeight\n        };\n        if (newX <= 0 || newX >= bounds.width) {\n          newVx *= -particleConfig.bounceDeceleration;\n          newX = Math.max(0, Math.min(bounds.width, newX));\n        }\n        if (newY <= 0 || newY >= bounds.height) {\n          newVy *= -particleConfig.bounceDeceleration;\n          newY = Math.max(0, Math.min(bounds.height, newY));\n        }\n\n        // Update life\n        const newLife = particle.life - 0.02;\n        return {\n          ...particle,\n          x: newX,\n          y: newY,\n          vx: newVx,\n          vy: newVy,\n          life: Math.max(0, newLife),\n          opacity: newLife,\n          size: particle.originalSize * newLife\n        };\n      }).filter(p => p.life > 0));\n    };\n    const animationFrame = setInterval(updateParticles, 16); // ~60fps\n    return () => clearInterval(animationFrame);\n  }, [particleConfig]);\n\n  // Add new particles\n  useEffect(() => {\n    if (particles.length > 0) {\n      const newParticles = particles.map(p => ({\n        ...p,\n        originalSize: p.size,\n        opacity: 1,\n        created: Date.now()\n      }));\n      setActiveParticles(prev => [...prev, ...newParticles]);\n    }\n  }, [particles]);\n\n  // Particle component with material-specific styling\n  const Particle = ({\n    particle\n  }) => {\n    const getParticleStyles = type => {\n      const baseStyles = {\n        position: 'absolute',\n        pointerEvents: 'none',\n        borderRadius: '50%',\n        willChange: 'transform, opacity'\n      };\n      switch (type) {\n        case 'metal':\n          return {\n            ...baseStyles,\n            background: 'linear-gradient(45deg, #c0c0c0, #ffffff, #a8a8a8)',\n            boxShadow: '0 0 4px rgba(192, 192, 192, 0.8), inset 0 0 4px rgba(255, 255, 255, 0.6)',\n            borderRadius: '2px'\n          };\n        case 'paper':\n          return {\n            ...baseStyles,\n            background: 'linear-gradient(45deg, #d4b896, #f4e4bc, #c9a876)',\n            boxShadow: '0 0 2px rgba(212, 184, 150, 0.6)',\n            borderRadius: '1px',\n            transform: 'rotate(45deg)'\n          };\n        case 'glass':\n          return {\n            ...baseStyles,\n            background: 'radial-gradient(circle, rgba(255, 255, 255, 0.8) 20%, rgba(200, 230, 255, 0.6) 70%, transparent)',\n            boxShadow: '0 0 8px rgba(255, 255, 255, 0.9), 0 0 4px rgba(0, 150, 255, 0.5)',\n            borderRadius: '50%'\n          };\n        case 'plastic':\n          return {\n            ...baseStyles,\n            background: 'linear-gradient(45deg, #ff6b6b, #4ecdc4, #45b7d1)',\n            boxShadow: '0 0 3px rgba(255, 107, 107, 0.7)',\n            borderRadius: '3px'\n          };\n        case 'mixed':\n          return {\n            ...baseStyles,\n            background: 'linear-gradient(45deg, #ffd93d, #6bcf7f, #4d4d4d, #ff6b6b)',\n            boxShadow: '0 0 5px rgba(255, 217, 61, 0.8)',\n            borderRadius: '2px',\n            animation: 'particleShimmer 1s ease-in-out infinite'\n          };\n        default:\n          return {\n            ...baseStyles,\n            background: 'radial-gradient(circle, #ffffff, #e0e0e0)',\n            boxShadow: '0 0 2px rgba(255, 255, 255, 0.5)'\n          };\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(motion.div, {\n      initial: {\n        scale: 0,\n        opacity: 1\n      },\n      animate: {\n        x: particle.x,\n        y: particle.y,\n        scale: particle.size / particle.originalSize,\n        opacity: particle.opacity,\n        rotate: particle.rotation || 0\n      },\n      transition: {\n        type: \"tween\",\n        duration: 0.1,\n        ease: \"linear\"\n      },\n      style: {\n        ...getParticleStyles(particle.type),\n        width: `${particle.originalSize}px`,\n        height: `${particle.originalSize}px`,\n        left: 0,\n        top: 0\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Particle effects for different materials\n  const createMaterialEffect = useCallback((position, materialType, intensity = 1) => {\n    const particleCount = Math.floor(15 * intensity);\n    const newParticles = [];\n    for (let i = 0; i < particleCount; i++) {\n      const angle = Math.PI * 2 * i / particleCount;\n      const velocity = 50 + Math.random() * 100 * intensity;\n      newParticles.push({\n        id: `effect-${Date.now()}-${i}`,\n        type: materialType,\n        x: position.x + (Math.random() - 0.5) * 20,\n        y: position.y + (Math.random() - 0.5) * 20,\n        vx: Math.cos(angle) * velocity,\n        vy: Math.sin(angle) * velocity - 50,\n        // Initial upward velocity\n        life: 1.0,\n        size: 2 + Math.random() * 4,\n        originalSize: 2 + Math.random() * 4,\n        opacity: 1,\n        rotation: Math.random() * 360\n      });\n    }\n    setActiveParticles(prev => [...prev, ...newParticles]);\n  }, []);\n\n  // Sparkle effect for satisfying moments\n  const createSparkleEffect = useCallback((position, color = 'white') => {\n    const sparkles = [];\n    for (let i = 0; i < 8; i++) {\n      const angle = Math.PI * 2 * i / 8;\n      const distance = 30 + Math.random() * 20;\n      sparkles.push({\n        id: `sparkle-${Date.now()}-${i}`,\n        type: 'sparkle',\n        x: position.x + Math.cos(angle) * distance,\n        y: position.y + Math.sin(angle) * distance,\n        vx: Math.cos(angle) * 20,\n        vy: Math.sin(angle) * 20,\n        life: 1.0,\n        size: 3 + Math.random() * 3,\n        originalSize: 3 + Math.random() * 3,\n        opacity: 1,\n        color: color\n      });\n    }\n    setActiveParticles(prev => [...prev, ...sparkles]);\n  }, []);\n\n  // Expose particle system methods globally\n  useEffect(() => {\n    window.ParticleSystem = {\n      createMaterialEffect,\n      createSparkleEffect,\n      setGravity: gravity => setParticleConfig(prev => ({\n        ...prev,\n        gravity\n      })),\n      setAirResistance: resistance => setParticleConfig(prev => ({\n        ...prev,\n        airResistance: resistance\n      }))\n    };\n  }, [createMaterialEffect, createSparkleEffect]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"style\", {\n      jsx: true,\n      children: `\n        @keyframes particleShimmer {\n          0%, 100% { filter: hue-rotate(0deg) brightness(1); }\n          50% { filter: hue-rotate(180deg) brightness(1.2); }\n        }\n        \n        @keyframes sparkle {\n          0%, 100% { \n            transform: scale(1) rotate(0deg);\n            opacity: 1;\n          }\n          50% { \n            transform: scale(1.5) rotate(180deg);\n            opacity: 0.7;\n          }\n        }\n        \n        .sparkle-particle {\n          animation: sparkle 0.8s ease-in-out infinite;\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 pointer-events-none z-40\",\n      children: activeParticles.map(particle => /*#__PURE__*/_jsxDEV(Particle, {\n        particle: particle\n      }, particle.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this), process.env.NODE_ENV === 'development' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed bottom-4 right-4 text-xs text-gray-400 bg-black/50 p-2 rounded\",\n      children: [\"Active Particles: \", activeParticles.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(ParticleSystem, \"Ikm7NQ+07c2Q+vN1v+BUkCm4CPU=\");\n_c = ParticleSystem;\nexport default ParticleSystem;\nvar _c;\n$RefreshReg$(_c, \"ParticleSystem\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","motion","AnimatePresence","jsxDEV","_jsxDEV","Fragment","_Fragment","ParticleSystem","particles","_s","activeParticles","setActiveParticles","particleConfig","setParticleConfig","gravity","airResistance","bounceDeceleration","minLife","maxLife","length","updateParticles","prev","map","particle","newVy","vy","newVx","vx","newX","x","newY","y","bounds","width","window","innerWidth","height","innerHeight","Math","max","min","newLife","life","opacity","size","originalSize","filter","p","animationFrame","setInterval","clearInterval","newParticles","created","Date","now","Particle","getParticleStyles","type","baseStyles","position","pointerEvents","borderRadius","willChange","background","boxShadow","transform","animation","div","initial","scale","animate","rotate","rotation","transition","duration","ease","style","left","top","fileName","_jsxFileName","lineNumber","columnNumber","createMaterialEffect","materialType","intensity","particleCount","floor","i","angle","PI","velocity","random","push","id","cos","sin","createSparkleEffect","color","sparkles","distance","setGravity","setAirResistance","resistance","children","jsx","className","process","env","NODE_ENV","_c","$RefreshReg$"],"sources":["/app/frontend/src/components/ParticleSystem.js"],"sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\n\nconst ParticleSystem = ({ particles }) => {\n  const [activeParticles, setActiveParticles] = useState([]);\n  const [particleConfig, setParticleConfig] = useState({\n    gravity: 0.5,\n    airResistance: 0.98,\n    bounceDeceleration: 0.7,\n    minLife: 2000,\n    maxLife: 4000\n  });\n\n  // Update particles physics\n  useEffect(() => {\n    if (particles.length === 0) return;\n\n    const updateParticles = () => {\n      setActiveParticles(prev => \n        prev.map(particle => {\n          // Apply physics\n          const newVy = particle.vy + particleConfig.gravity;\n          const newVx = particle.vx * particleConfig.airResistance;\n          \n          let newX = particle.x + newVx;\n          let newY = particle.y + newVy;\n          \n          // Boundary collision (simple bounce)\n          const bounds = { width: window.innerWidth, height: window.innerHeight };\n          \n          if (newX <= 0 || newX >= bounds.width) {\n            newVx *= -particleConfig.bounceDeceleration;\n            newX = Math.max(0, Math.min(bounds.width, newX));\n          }\n          \n          if (newY <= 0 || newY >= bounds.height) {\n            newVy *= -particleConfig.bounceDeceleration;\n            newY = Math.max(0, Math.min(bounds.height, newY));\n          }\n          \n          // Update life\n          const newLife = particle.life - 0.02;\n          \n          return {\n            ...particle,\n            x: newX,\n            y: newY,\n            vx: newVx,\n            vy: newVy,\n            life: Math.max(0, newLife),\n            opacity: newLife,\n            size: particle.originalSize * newLife\n          };\n        }).filter(p => p.life > 0)\n      );\n    };\n\n    const animationFrame = setInterval(updateParticles, 16); // ~60fps\n    return () => clearInterval(animationFrame);\n  }, [particleConfig]);\n\n  // Add new particles\n  useEffect(() => {\n    if (particles.length > 0) {\n      const newParticles = particles.map(p => ({\n        ...p,\n        originalSize: p.size,\n        opacity: 1,\n        created: Date.now()\n      }));\n      \n      setActiveParticles(prev => [...prev, ...newParticles]);\n    }\n  }, [particles]);\n\n  // Particle component with material-specific styling\n  const Particle = ({ particle }) => {\n    const getParticleStyles = (type) => {\n      const baseStyles = {\n        position: 'absolute',\n        pointerEvents: 'none',\n        borderRadius: '50%',\n        willChange: 'transform, opacity'\n      };\n\n      switch (type) {\n        case 'metal':\n          return {\n            ...baseStyles,\n            background: 'linear-gradient(45deg, #c0c0c0, #ffffff, #a8a8a8)',\n            boxShadow: '0 0 4px rgba(192, 192, 192, 0.8), inset 0 0 4px rgba(255, 255, 255, 0.6)',\n            borderRadius: '2px'\n          };\n          \n        case 'paper':\n          return {\n            ...baseStyles,\n            background: 'linear-gradient(45deg, #d4b896, #f4e4bc, #c9a876)',\n            boxShadow: '0 0 2px rgba(212, 184, 150, 0.6)',\n            borderRadius: '1px',\n            transform: 'rotate(45deg)'\n          };\n          \n        case 'glass':\n          return {\n            ...baseStyles,\n            background: 'radial-gradient(circle, rgba(255, 255, 255, 0.8) 20%, rgba(200, 230, 255, 0.6) 70%, transparent)',\n            boxShadow: '0 0 8px rgba(255, 255, 255, 0.9), 0 0 4px rgba(0, 150, 255, 0.5)',\n            borderRadius: '50%'\n          };\n          \n        case 'plastic':\n          return {\n            ...baseStyles,\n            background: 'linear-gradient(45deg, #ff6b6b, #4ecdc4, #45b7d1)',\n            boxShadow: '0 0 3px rgba(255, 107, 107, 0.7)',\n            borderRadius: '3px'\n          };\n          \n        case 'mixed':\n          return {\n            ...baseStyles,\n            background: 'linear-gradient(45deg, #ffd93d, #6bcf7f, #4d4d4d, #ff6b6b)',\n            boxShadow: '0 0 5px rgba(255, 217, 61, 0.8)',\n            borderRadius: '2px',\n            animation: 'particleShimmer 1s ease-in-out infinite'\n          };\n          \n        default:\n          return {\n            ...baseStyles,\n            background: 'radial-gradient(circle, #ffffff, #e0e0e0)',\n            boxShadow: '0 0 2px rgba(255, 255, 255, 0.5)'\n          };\n      }\n    };\n\n    return (\n      <motion.div\n        initial={{ scale: 0, opacity: 1 }}\n        animate={{\n          x: particle.x,\n          y: particle.y,\n          scale: particle.size / particle.originalSize,\n          opacity: particle.opacity,\n          rotate: particle.rotation || 0\n        }}\n        transition={{\n          type: \"tween\",\n          duration: 0.1,\n          ease: \"linear\"\n        }}\n        style={{\n          ...getParticleStyles(particle.type),\n          width: `${particle.originalSize}px`,\n          height: `${particle.originalSize}px`,\n          left: 0,\n          top: 0\n        }}\n      />\n    );\n  };\n\n  // Particle effects for different materials\n  const createMaterialEffect = useCallback((position, materialType, intensity = 1) => {\n    const particleCount = Math.floor(15 * intensity);\n    const newParticles = [];\n\n    for (let i = 0; i < particleCount; i++) {\n      const angle = (Math.PI * 2 * i) / particleCount;\n      const velocity = 50 + Math.random() * 100 * intensity;\n      \n      newParticles.push({\n        id: `effect-${Date.now()}-${i}`,\n        type: materialType,\n        x: position.x + (Math.random() - 0.5) * 20,\n        y: position.y + (Math.random() - 0.5) * 20,\n        vx: Math.cos(angle) * velocity,\n        vy: Math.sin(angle) * velocity - 50, // Initial upward velocity\n        life: 1.0,\n        size: 2 + Math.random() * 4,\n        originalSize: 2 + Math.random() * 4,\n        opacity: 1,\n        rotation: Math.random() * 360\n      });\n    }\n\n    setActiveParticles(prev => [...prev, ...newParticles]);\n  }, []);\n\n  // Sparkle effect for satisfying moments\n  const createSparkleEffect = useCallback((position, color = 'white') => {\n    const sparkles = [];\n    \n    for (let i = 0; i < 8; i++) {\n      const angle = (Math.PI * 2 * i) / 8;\n      const distance = 30 + Math.random() * 20;\n      \n      sparkles.push({\n        id: `sparkle-${Date.now()}-${i}`,\n        type: 'sparkle',\n        x: position.x + Math.cos(angle) * distance,\n        y: position.y + Math.sin(angle) * distance,\n        vx: Math.cos(angle) * 20,\n        vy: Math.sin(angle) * 20,\n        life: 1.0,\n        size: 3 + Math.random() * 3,\n        originalSize: 3 + Math.random() * 3,\n        opacity: 1,\n        color: color\n      });\n    }\n\n    setActiveParticles(prev => [...prev, ...sparkles]);\n  }, []);\n\n  // Expose particle system methods globally\n  useEffect(() => {\n    window.ParticleSystem = {\n      createMaterialEffect,\n      createSparkleEffect,\n      setGravity: (gravity) => setParticleConfig(prev => ({ ...prev, gravity })),\n      setAirResistance: (resistance) => setParticleConfig(prev => ({ ...prev, airResistance: resistance }))\n    };\n  }, [createMaterialEffect, createSparkleEffect]);\n\n  return (\n    <>\n      {/* CSS for particle animations */}\n      <style jsx>{`\n        @keyframes particleShimmer {\n          0%, 100% { filter: hue-rotate(0deg) brightness(1); }\n          50% { filter: hue-rotate(180deg) brightness(1.2); }\n        }\n        \n        @keyframes sparkle {\n          0%, 100% { \n            transform: scale(1) rotate(0deg);\n            opacity: 1;\n          }\n          50% { \n            transform: scale(1.5) rotate(180deg);\n            opacity: 0.7;\n          }\n        }\n        \n        .sparkle-particle {\n          animation: sparkle 0.8s ease-in-out infinite;\n        }\n      `}</style>\n\n      {/* Render active particles */}\n      <div className=\"fixed inset-0 pointer-events-none z-40\">\n        {activeParticles.map(particle => (\n          <Particle key={particle.id} particle={particle} />\n        ))}\n      </div>\n\n      {/* Particle system debug info (only in development) */}\n      {process.env.NODE_ENV === 'development' && (\n        <div className=\"fixed bottom-4 right-4 text-xs text-gray-400 bg-black/50 p-2 rounded\">\n          Active Particles: {activeParticles.length}\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default ParticleSystem;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}