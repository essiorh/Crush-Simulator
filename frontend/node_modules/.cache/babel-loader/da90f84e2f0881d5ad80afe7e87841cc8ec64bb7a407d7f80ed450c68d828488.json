{"ast":null,"code":"var _jsxFileName = \"/app/frontend/src/components/SoundManager.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { Howl } from 'howler';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SoundManager = () => {\n  _s();\n  const [soundEnabled, setSoundEnabled] = useState(true);\n  const [volume, setVolume] = useState(0.7);\n  const [currentlyPlaying, setCurrentlyPlaying] = useState(null);\n  const soundCache = useRef({});\n  const ambientLoop = useRef(null);\n\n  // Sound files mapping\n  const soundFiles = {\n    'can_crush.mp3': '/sounds/can_crush.mp3',\n    'cardboard_crush.mp3': '/sounds/cardboard_crush.mp3',\n    'electronics_crush.mp3': '/sounds/electronics_crush.mp3',\n    'glass_shatter.mp3': '/sounds/glass_shatter.mp3',\n    'plastic_crush.mp3': '/sounds/plastic_crush.mp3',\n    'ambient_background.mp3': '/sounds/ambient_background.mp3'\n  };\n\n  // Initialize sound system\n  useEffect(() => {\n    // Create ambient background sound\n    try {\n      ambientLoop.current = new Howl({\n        src: [soundFiles['ambient_background.mp3']],\n        loop: true,\n        volume: 0.2,\n        autoplay: false,\n        html5: true,\n        // Use HTML5 Audio for better mobile support\n        format: ['mp3'],\n        onloaderror: () => {\n          console.log('Ambient sound not available, using fallback');\n          // Create synthetic ambient sound\n          createSyntheticAmbient();\n        }\n      });\n    } catch (error) {\n      console.log('Howler not available, creating synthetic sounds');\n      createSyntheticAmbient();\n    }\n\n    // Preload crush sounds\n    Object.keys(soundFiles).forEach(soundKey => {\n      if (soundKey !== 'ambient_background.mp3') {\n        try {\n          soundCache.current[soundKey] = new Howl({\n            src: [soundFiles[soundKey]],\n            volume: volume,\n            html5: true,\n            format: ['mp3'],\n            onloaderror: () => {\n              // Create synthetic sound as fallback\n              soundCache.current[soundKey] = createSyntheticSound(soundKey);\n            }\n          });\n        } catch (error) {\n          soundCache.current[soundKey] = createSyntheticSound(soundKey);\n        }\n      }\n    });\n    return () => {\n      // Cleanup\n      if (ambientLoop.current) {\n        ambientLoop.current.stop();\n        ambientLoop.current.unload();\n      }\n      Object.values(soundCache.current).forEach(sound => {\n        if (sound && sound.stop) {\n          sound.stop();\n          sound.unload();\n        }\n      });\n    };\n  }, []);\n\n  // Create synthetic ambient sound\n  const createSyntheticAmbient = () => {\n    const audioContext = new (window.AudioContext || window.webkitAudioContext)();\n    const oscillator = audioContext.createOscillator();\n    const gainNode = audioContext.createGain();\n    oscillator.connect(gainNode);\n    gainNode.connect(audioContext.destination);\n    oscillator.frequency.setValueAtTime(60, audioContext.currentTime); // Low frequency\n    oscillator.type = 'sine';\n    gainNode.gain.setValueAtTime(0.05, audioContext.currentTime);\n\n    // Add some variation\n    setInterval(() => {\n      if (soundEnabled) {\n        oscillator.frequency.setValueAtTime(60 + Math.random() * 20, audioContext.currentTime);\n      }\n    }, 5000);\n    if (soundEnabled) {\n      oscillator.start();\n    }\n    ambientLoop.current = {\n      play: () => oscillator.start && oscillator.start(),\n      stop: () => oscillator.stop && oscillator.stop(),\n      volume: vol => gainNode.gain.setValueAtTime(vol * 0.1, audioContext.currentTime)\n    };\n  };\n\n  // Create synthetic crush sounds using Web Audio API\n  const createSyntheticSound = soundType => {\n    return {\n      play: () => {\n        if (!soundEnabled) return;\n        const audioContext = new (window.AudioContext || window.webkitAudioContext)();\n        const oscillator = audioContext.createOscillator();\n        const gainNode = audioContext.createGain();\n        const filter = audioContext.createBiquadFilter();\n        oscillator.connect(filter);\n        filter.connect(gainNode);\n        gainNode.connect(audioContext.destination);\n\n        // Different sound characteristics based on material\n        switch (soundType) {\n          case 'can_crush.mp3':\n            oscillator.frequency.setValueAtTime(800, audioContext.currentTime);\n            oscillator.frequency.exponentialRampToValueAtTime(200, audioContext.currentTime + 0.3);\n            oscillator.type = 'square';\n            filter.type = 'highpass';\n            filter.frequency.setValueAtTime(400, audioContext.currentTime);\n            break;\n          case 'cardboard_crush.mp3':\n            oscillator.frequency.setValueAtTime(300, audioContext.currentTime);\n            oscillator.frequency.exponentialRampToValueAtTime(100, audioContext.currentTime + 0.5);\n            oscillator.type = 'sawtooth';\n            filter.type = 'bandpass';\n            filter.frequency.setValueAtTime(200, audioContext.currentTime);\n            break;\n          case 'electronics_crush.mp3':\n            oscillator.frequency.setValueAtTime(1200, audioContext.currentTime);\n            oscillator.frequency.exponentialRampToValueAtTime(300, audioContext.currentTime + 0.4);\n            oscillator.type = 'square';\n            filter.type = 'lowpass';\n            filter.frequency.setValueAtTime(800, audioContext.currentTime);\n            break;\n          case 'glass_shatter.mp3':\n            oscillator.frequency.setValueAtTime(2000, audioContext.currentTime);\n            oscillator.frequency.exponentialRampToValueAtTime(500, audioContext.currentTime + 0.2);\n            oscillator.type = 'triangle';\n            filter.type = 'highpass';\n            filter.frequency.setValueAtTime(1000, audioContext.currentTime);\n            break;\n          case 'plastic_crush.mp3':\n            oscillator.frequency.setValueAtTime(600, audioContext.currentTime);\n            oscillator.frequency.exponentialRampToValueAtTime(150, audioContext.currentTime + 0.6);\n            oscillator.type = 'sine';\n            filter.type = 'bandpass';\n            filter.frequency.setValueAtTime(300, audioContext.currentTime);\n            break;\n          default:\n            oscillator.frequency.setValueAtTime(440, audioContext.currentTime);\n            oscillator.type = 'sine';\n        }\n\n        // Envelope\n        gainNode.gain.setValueAtTime(0, audioContext.currentTime);\n        gainNode.gain.linearRampToValueAtTime(volume * 0.3, audioContext.currentTime + 0.01);\n        gainNode.gain.exponentialRampToValueAtTime(0.001, audioContext.currentTime + 0.8);\n        oscillator.start(audioContext.currentTime);\n        oscillator.stop(audioContext.currentTime + 0.8);\n        setCurrentlyPlaying(soundType);\n        setTimeout(() => setCurrentlyPlaying(null), 800);\n      },\n      volume: () => {},\n      stop: () => {},\n      unload: () => {}\n    };\n  };\n\n  // Play crush sound\n  const playCrushSound = soundFile => {\n    if (!soundEnabled || !soundFile) return;\n    const sound = soundCache.current[soundFile];\n    if (sound && sound.play) {\n      sound.volume(volume);\n      sound.play();\n      setCurrentlyPlaying(soundFile);\n\n      // Clear playing state after estimated duration\n      setTimeout(() => {\n        setCurrentlyPlaying(null);\n      }, 1000);\n    }\n  };\n\n  // Start ambient sound\n  const startAmbient = () => {\n    if (ambientLoop.current && soundEnabled) {\n      if (ambientLoop.current.volume) {\n        ambientLoop.current.volume(volume * 0.3);\n      }\n      if (ambientLoop.current.play) {\n        ambientLoop.current.play();\n      }\n    }\n  };\n\n  // Stop ambient sound\n  const stopAmbient = () => {\n    if (ambientLoop.current && ambientLoop.current.stop) {\n      ambientLoop.current.stop();\n    }\n  };\n\n  // Volume change handler\n  const handleVolumeChange = newVolume => {\n    setVolume(newVolume);\n    if (ambientLoop.current && ambientLoop.current.volume) {\n      ambientLoop.current.volume(newVolume * 0.3);\n    }\n    Object.values(soundCache.current).forEach(sound => {\n      if (sound && sound.volume) {\n        sound.volume(newVolume);\n      }\n    });\n  };\n\n  // Toggle sound\n  const toggleSound = () => {\n    setSoundEnabled(!soundEnabled);\n    if (!soundEnabled) {\n      startAmbient();\n    } else {\n      stopAmbient();\n    }\n  };\n\n  // Expose sound manager to window for other components\n  useEffect(() => {\n    window.SoundManager = {\n      playCrushSound,\n      startAmbient,\n      stopAmbient,\n      toggleSound,\n      setVolume: handleVolumeChange,\n      isEnabled: () => soundEnabled,\n      getVolume: () => volume\n    };\n  }, [soundEnabled, volume]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed top-4 left-4 z-50\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-glass p-3 flex items-center gap-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleSound,\n        className: `w-8 h-8 rounded-full flex items-center justify-center transition-all ${soundEnabled ? 'bg-green-500/20 text-green-400' : 'bg-red-500/20 text-red-400'}`,\n        title: soundEnabled ? 'ÐžÑ‚ÐºÐ»ÑŽÑ‡Ð¸Ñ‚ÑŒ Ð·Ð²ÑƒÐº' : 'Ð’ÐºÐ»ÑŽÑ‡Ð¸Ñ‚ÑŒ Ð·Ð²ÑƒÐº',\n        children: soundEnabled ? 'ðŸ”Š' : 'ðŸ”‡'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this), soundEnabled && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"0\",\n          max: \"1\",\n          step: \"0.1\",\n          value: volume,\n          onChange: e => handleVolumeChange(parseFloat(e.target.value)),\n          className: \"w-20 h-2 bg-gray-600 rounded-lg appearance-none cursor-pointer\",\n          style: {\n            background: `linear-gradient(to right, #10b981 0%, #10b981 ${volume * 100}%, #4b5563 ${volume * 100}%, #4b5563 100%)`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-xs text-gray-400 w-8\",\n          children: Math.round(volume * 100)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 11\n      }, this), currentlyPlaying && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center gap-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-2 h-2 bg-green-400 rounded-full animate-pulse\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-xs text-green-400\",\n          children: \"\\u266A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 264,\n    columnNumber: 5\n  }, this);\n};\n_s(SoundManager, \"FouchFUnfM1bR6pW7NjBPHTi9zo=\");\n_c = SoundManager;\nexport default SoundManager;\nvar _c;\n$RefreshReg$(_c, \"SoundManager\");","map":{"version":3,"names":["React","useEffect","useState","useRef","Howl","jsxDEV","_jsxDEV","SoundManager","_s","soundEnabled","setSoundEnabled","volume","setVolume","currentlyPlaying","setCurrentlyPlaying","soundCache","ambientLoop","soundFiles","current","src","loop","autoplay","html5","format","onloaderror","console","log","createSyntheticAmbient","error","Object","keys","forEach","soundKey","createSyntheticSound","stop","unload","values","sound","audioContext","window","AudioContext","webkitAudioContext","oscillator","createOscillator","gainNode","createGain","connect","destination","frequency","setValueAtTime","currentTime","type","gain","setInterval","Math","random","start","play","vol","soundType","filter","createBiquadFilter","exponentialRampToValueAtTime","linearRampToValueAtTime","setTimeout","playCrushSound","soundFile","startAmbient","stopAmbient","handleVolumeChange","newVolume","toggleSound","isEnabled","getVolume","className","children","onClick","title","fileName","_jsxFileName","lineNumber","columnNumber","min","max","step","value","onChange","e","parseFloat","target","style","background","round","_c","$RefreshReg$"],"sources":["/app/frontend/src/components/SoundManager.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport { Howl } from 'howler';\n\nconst SoundManager = () => {\n  const [soundEnabled, setSoundEnabled] = useState(true);\n  const [volume, setVolume] = useState(0.7);\n  const [currentlyPlaying, setCurrentlyPlaying] = useState(null);\n  const soundCache = useRef({});\n  const ambientLoop = useRef(null);\n\n  // Sound files mapping\n  const soundFiles = {\n    'can_crush.mp3': '/sounds/can_crush.mp3',\n    'cardboard_crush.mp3': '/sounds/cardboard_crush.mp3',\n    'electronics_crush.mp3': '/sounds/electronics_crush.mp3',\n    'glass_shatter.mp3': '/sounds/glass_shatter.mp3',\n    'plastic_crush.mp3': '/sounds/plastic_crush.mp3',\n    'ambient_background.mp3': '/sounds/ambient_background.mp3'\n  };\n\n  // Initialize sound system\n  useEffect(() => {\n    // Create ambient background sound\n    try {\n      ambientLoop.current = new Howl({\n        src: [soundFiles['ambient_background.mp3']],\n        loop: true,\n        volume: 0.2,\n        autoplay: false,\n        html5: true, // Use HTML5 Audio for better mobile support\n        format: ['mp3'],\n        onloaderror: () => {\n          console.log('Ambient sound not available, using fallback');\n          // Create synthetic ambient sound\n          createSyntheticAmbient();\n        }\n      });\n    } catch (error) {\n      console.log('Howler not available, creating synthetic sounds');\n      createSyntheticAmbient();\n    }\n\n    // Preload crush sounds\n    Object.keys(soundFiles).forEach(soundKey => {\n      if (soundKey !== 'ambient_background.mp3') {\n        try {\n          soundCache.current[soundKey] = new Howl({\n            src: [soundFiles[soundKey]],\n            volume: volume,\n            html5: true,\n            format: ['mp3'],\n            onloaderror: () => {\n              // Create synthetic sound as fallback\n              soundCache.current[soundKey] = createSyntheticSound(soundKey);\n            }\n          });\n        } catch (error) {\n          soundCache.current[soundKey] = createSyntheticSound(soundKey);\n        }\n      }\n    });\n\n    return () => {\n      // Cleanup\n      if (ambientLoop.current) {\n        ambientLoop.current.stop();\n        ambientLoop.current.unload();\n      }\n      Object.values(soundCache.current).forEach(sound => {\n        if (sound && sound.stop) {\n          sound.stop();\n          sound.unload();\n        }\n      });\n    };\n  }, []);\n\n  // Create synthetic ambient sound\n  const createSyntheticAmbient = () => {\n    const audioContext = new (window.AudioContext || window.webkitAudioContext)();\n    const oscillator = audioContext.createOscillator();\n    const gainNode = audioContext.createGain();\n    \n    oscillator.connect(gainNode);\n    gainNode.connect(audioContext.destination);\n    \n    oscillator.frequency.setValueAtTime(60, audioContext.currentTime); // Low frequency\n    oscillator.type = 'sine';\n    gainNode.gain.setValueAtTime(0.05, audioContext.currentTime);\n    \n    // Add some variation\n    setInterval(() => {\n      if (soundEnabled) {\n        oscillator.frequency.setValueAtTime(\n          60 + Math.random() * 20, \n          audioContext.currentTime\n        );\n      }\n    }, 5000);\n    \n    if (soundEnabled) {\n      oscillator.start();\n    }\n    \n    ambientLoop.current = {\n      play: () => oscillator.start && oscillator.start(),\n      stop: () => oscillator.stop && oscillator.stop(),\n      volume: (vol) => gainNode.gain.setValueAtTime(vol * 0.1, audioContext.currentTime)\n    };\n  };\n\n  // Create synthetic crush sounds using Web Audio API\n  const createSyntheticSound = (soundType) => {\n    return {\n      play: () => {\n        if (!soundEnabled) return;\n        \n        const audioContext = new (window.AudioContext || window.webkitAudioContext)();\n        const oscillator = audioContext.createOscillator();\n        const gainNode = audioContext.createGain();\n        const filter = audioContext.createBiquadFilter();\n        \n        oscillator.connect(filter);\n        filter.connect(gainNode);\n        gainNode.connect(audioContext.destination);\n        \n        // Different sound characteristics based on material\n        switch (soundType) {\n          case 'can_crush.mp3':\n            oscillator.frequency.setValueAtTime(800, audioContext.currentTime);\n            oscillator.frequency.exponentialRampToValueAtTime(200, audioContext.currentTime + 0.3);\n            oscillator.type = 'square';\n            filter.type = 'highpass';\n            filter.frequency.setValueAtTime(400, audioContext.currentTime);\n            break;\n            \n          case 'cardboard_crush.mp3':\n            oscillator.frequency.setValueAtTime(300, audioContext.currentTime);\n            oscillator.frequency.exponentialRampToValueAtTime(100, audioContext.currentTime + 0.5);\n            oscillator.type = 'sawtooth';\n            filter.type = 'bandpass';\n            filter.frequency.setValueAtTime(200, audioContext.currentTime);\n            break;\n            \n          case 'electronics_crush.mp3':\n            oscillator.frequency.setValueAtTime(1200, audioContext.currentTime);\n            oscillator.frequency.exponentialRampToValueAtTime(300, audioContext.currentTime + 0.4);\n            oscillator.type = 'square';\n            filter.type = 'lowpass';\n            filter.frequency.setValueAtTime(800, audioContext.currentTime);\n            break;\n            \n          case 'glass_shatter.mp3':\n            oscillator.frequency.setValueAtTime(2000, audioContext.currentTime);\n            oscillator.frequency.exponentialRampToValueAtTime(500, audioContext.currentTime + 0.2);\n            oscillator.type = 'triangle';\n            filter.type = 'highpass';\n            filter.frequency.setValueAtTime(1000, audioContext.currentTime);\n            break;\n            \n          case 'plastic_crush.mp3':\n            oscillator.frequency.setValueAtTime(600, audioContext.currentTime);\n            oscillator.frequency.exponentialRampToValueAtTime(150, audioContext.currentTime + 0.6);\n            oscillator.type = 'sine';\n            filter.type = 'bandpass';\n            filter.frequency.setValueAtTime(300, audioContext.currentTime);\n            break;\n            \n          default:\n            oscillator.frequency.setValueAtTime(440, audioContext.currentTime);\n            oscillator.type = 'sine';\n        }\n        \n        // Envelope\n        gainNode.gain.setValueAtTime(0, audioContext.currentTime);\n        gainNode.gain.linearRampToValueAtTime(volume * 0.3, audioContext.currentTime + 0.01);\n        gainNode.gain.exponentialRampToValueAtTime(0.001, audioContext.currentTime + 0.8);\n        \n        oscillator.start(audioContext.currentTime);\n        oscillator.stop(audioContext.currentTime + 0.8);\n        \n        setCurrentlyPlaying(soundType);\n        setTimeout(() => setCurrentlyPlaying(null), 800);\n      },\n      volume: () => {},\n      stop: () => {},\n      unload: () => {}\n    };\n  };\n\n  // Play crush sound\n  const playCrushSound = (soundFile) => {\n    if (!soundEnabled || !soundFile) return;\n\n    const sound = soundCache.current[soundFile];\n    if (sound && sound.play) {\n      sound.volume(volume);\n      sound.play();\n      setCurrentlyPlaying(soundFile);\n      \n      // Clear playing state after estimated duration\n      setTimeout(() => {\n        setCurrentlyPlaying(null);\n      }, 1000);\n    }\n  };\n\n  // Start ambient sound\n  const startAmbient = () => {\n    if (ambientLoop.current && soundEnabled) {\n      if (ambientLoop.current.volume) {\n        ambientLoop.current.volume(volume * 0.3);\n      }\n      if (ambientLoop.current.play) {\n        ambientLoop.current.play();\n      }\n    }\n  };\n\n  // Stop ambient sound\n  const stopAmbient = () => {\n    if (ambientLoop.current && ambientLoop.current.stop) {\n      ambientLoop.current.stop();\n    }\n  };\n\n  // Volume change handler\n  const handleVolumeChange = (newVolume) => {\n    setVolume(newVolume);\n    if (ambientLoop.current && ambientLoop.current.volume) {\n      ambientLoop.current.volume(newVolume * 0.3);\n    }\n    Object.values(soundCache.current).forEach(sound => {\n      if (sound && sound.volume) {\n        sound.volume(newVolume);\n      }\n    });\n  };\n\n  // Toggle sound\n  const toggleSound = () => {\n    setSoundEnabled(!soundEnabled);\n    if (!soundEnabled) {\n      startAmbient();\n    } else {\n      stopAmbient();\n    }\n  };\n\n  // Expose sound manager to window for other components\n  useEffect(() => {\n    window.SoundManager = {\n      playCrushSound,\n      startAmbient,\n      stopAmbient,\n      toggleSound,\n      setVolume: handleVolumeChange,\n      isEnabled: () => soundEnabled,\n      getVolume: () => volume\n    };\n  }, [soundEnabled, volume]);\n\n  return (\n    <div className=\"fixed top-4 left-4 z-50\">\n      <div className=\"card-glass p-3 flex items-center gap-3\">\n        {/* Sound toggle */}\n        <button\n          onClick={toggleSound}\n          className={`w-8 h-8 rounded-full flex items-center justify-center transition-all ${\n            soundEnabled \n              ? 'bg-green-500/20 text-green-400' \n              : 'bg-red-500/20 text-red-400'\n          }`}\n          title={soundEnabled ? 'ÐžÑ‚ÐºÐ»ÑŽÑ‡Ð¸Ñ‚ÑŒ Ð·Ð²ÑƒÐº' : 'Ð’ÐºÐ»ÑŽÑ‡Ð¸Ñ‚ÑŒ Ð·Ð²ÑƒÐº'}\n        >\n          {soundEnabled ? 'ðŸ”Š' : 'ðŸ”‡'}\n        </button>\n\n        {/* Volume control */}\n        {soundEnabled && (\n          <div className=\"flex items-center gap-2\">\n            <input\n              type=\"range\"\n              min=\"0\"\n              max=\"1\"\n              step=\"0.1\"\n              value={volume}\n              onChange={(e) => handleVolumeChange(parseFloat(e.target.value))}\n              className=\"w-20 h-2 bg-gray-600 rounded-lg appearance-none cursor-pointer\"\n              style={{\n                background: `linear-gradient(to right, #10b981 0%, #10b981 ${volume * 100}%, #4b5563 ${volume * 100}%, #4b5563 100%)`\n              }}\n            />\n            <span className=\"text-xs text-gray-400 w-8\">\n              {Math.round(volume * 100)}\n            </span>\n          </div>\n        )}\n\n        {/* Currently playing indicator */}\n        {currentlyPlaying && (\n          <div className=\"flex items-center gap-1\">\n            <div className=\"w-2 h-2 bg-green-400 rounded-full animate-pulse\" />\n            <span className=\"text-xs text-green-400\">â™ª</span>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default SoundManager;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,IAAI,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,GAAG,CAAC;EACzC,MAAM,CAACW,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC9D,MAAMa,UAAU,GAAGZ,MAAM,CAAC,CAAC,CAAC,CAAC;EAC7B,MAAMa,WAAW,GAAGb,MAAM,CAAC,IAAI,CAAC;;EAEhC;EACA,MAAMc,UAAU,GAAG;IACjB,eAAe,EAAE,uBAAuB;IACxC,qBAAqB,EAAE,6BAA6B;IACpD,uBAAuB,EAAE,+BAA+B;IACxD,mBAAmB,EAAE,2BAA2B;IAChD,mBAAmB,EAAE,2BAA2B;IAChD,wBAAwB,EAAE;EAC5B,CAAC;;EAED;EACAhB,SAAS,CAAC,MAAM;IACd;IACA,IAAI;MACFe,WAAW,CAACE,OAAO,GAAG,IAAId,IAAI,CAAC;QAC7Be,GAAG,EAAE,CAACF,UAAU,CAAC,wBAAwB,CAAC,CAAC;QAC3CG,IAAI,EAAE,IAAI;QACVT,MAAM,EAAE,GAAG;QACXU,QAAQ,EAAE,KAAK;QACfC,KAAK,EAAE,IAAI;QAAE;QACbC,MAAM,EAAE,CAAC,KAAK,CAAC;QACfC,WAAW,EAAEA,CAAA,KAAM;UACjBC,OAAO,CAACC,GAAG,CAAC,6CAA6C,CAAC;UAC1D;UACAC,sBAAsB,CAAC,CAAC;QAC1B;MACF,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdH,OAAO,CAACC,GAAG,CAAC,iDAAiD,CAAC;MAC9DC,sBAAsB,CAAC,CAAC;IAC1B;;IAEA;IACAE,MAAM,CAACC,IAAI,CAACb,UAAU,CAAC,CAACc,OAAO,CAACC,QAAQ,IAAI;MAC1C,IAAIA,QAAQ,KAAK,wBAAwB,EAAE;QACzC,IAAI;UACFjB,UAAU,CAACG,OAAO,CAACc,QAAQ,CAAC,GAAG,IAAI5B,IAAI,CAAC;YACtCe,GAAG,EAAE,CAACF,UAAU,CAACe,QAAQ,CAAC,CAAC;YAC3BrB,MAAM,EAAEA,MAAM;YACdW,KAAK,EAAE,IAAI;YACXC,MAAM,EAAE,CAAC,KAAK,CAAC;YACfC,WAAW,EAAEA,CAAA,KAAM;cACjB;cACAT,UAAU,CAACG,OAAO,CAACc,QAAQ,CAAC,GAAGC,oBAAoB,CAACD,QAAQ,CAAC;YAC/D;UACF,CAAC,CAAC;QACJ,CAAC,CAAC,OAAOJ,KAAK,EAAE;UACdb,UAAU,CAACG,OAAO,CAACc,QAAQ,CAAC,GAAGC,oBAAoB,CAACD,QAAQ,CAAC;QAC/D;MACF;IACF,CAAC,CAAC;IAEF,OAAO,MAAM;MACX;MACA,IAAIhB,WAAW,CAACE,OAAO,EAAE;QACvBF,WAAW,CAACE,OAAO,CAACgB,IAAI,CAAC,CAAC;QAC1BlB,WAAW,CAACE,OAAO,CAACiB,MAAM,CAAC,CAAC;MAC9B;MACAN,MAAM,CAACO,MAAM,CAACrB,UAAU,CAACG,OAAO,CAAC,CAACa,OAAO,CAACM,KAAK,IAAI;QACjD,IAAIA,KAAK,IAAIA,KAAK,CAACH,IAAI,EAAE;UACvBG,KAAK,CAACH,IAAI,CAAC,CAAC;UACZG,KAAK,CAACF,MAAM,CAAC,CAAC;QAChB;MACF,CAAC,CAAC;IACJ,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMR,sBAAsB,GAAGA,CAAA,KAAM;IACnC,MAAMW,YAAY,GAAG,KAAKC,MAAM,CAACC,YAAY,IAAID,MAAM,CAACE,kBAAkB,EAAE,CAAC;IAC7E,MAAMC,UAAU,GAAGJ,YAAY,CAACK,gBAAgB,CAAC,CAAC;IAClD,MAAMC,QAAQ,GAAGN,YAAY,CAACO,UAAU,CAAC,CAAC;IAE1CH,UAAU,CAACI,OAAO,CAACF,QAAQ,CAAC;IAC5BA,QAAQ,CAACE,OAAO,CAACR,YAAY,CAACS,WAAW,CAAC;IAE1CL,UAAU,CAACM,SAAS,CAACC,cAAc,CAAC,EAAE,EAAEX,YAAY,CAACY,WAAW,CAAC,CAAC,CAAC;IACnER,UAAU,CAACS,IAAI,GAAG,MAAM;IACxBP,QAAQ,CAACQ,IAAI,CAACH,cAAc,CAAC,IAAI,EAAEX,YAAY,CAACY,WAAW,CAAC;;IAE5D;IACAG,WAAW,CAAC,MAAM;MAChB,IAAI5C,YAAY,EAAE;QAChBiC,UAAU,CAACM,SAAS,CAACC,cAAc,CACjC,EAAE,GAAGK,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,EAAE,EACvBjB,YAAY,CAACY,WACf,CAAC;MACH;IACF,CAAC,EAAE,IAAI,CAAC;IAER,IAAIzC,YAAY,EAAE;MAChBiC,UAAU,CAACc,KAAK,CAAC,CAAC;IACpB;IAEAxC,WAAW,CAACE,OAAO,GAAG;MACpBuC,IAAI,EAAEA,CAAA,KAAMf,UAAU,CAACc,KAAK,IAAId,UAAU,CAACc,KAAK,CAAC,CAAC;MAClDtB,IAAI,EAAEA,CAAA,KAAMQ,UAAU,CAACR,IAAI,IAAIQ,UAAU,CAACR,IAAI,CAAC,CAAC;MAChDvB,MAAM,EAAG+C,GAAG,IAAKd,QAAQ,CAACQ,IAAI,CAACH,cAAc,CAACS,GAAG,GAAG,GAAG,EAAEpB,YAAY,CAACY,WAAW;IACnF,CAAC;EACH,CAAC;;EAED;EACA,MAAMjB,oBAAoB,GAAI0B,SAAS,IAAK;IAC1C,OAAO;MACLF,IAAI,EAAEA,CAAA,KAAM;QACV,IAAI,CAAChD,YAAY,EAAE;QAEnB,MAAM6B,YAAY,GAAG,KAAKC,MAAM,CAACC,YAAY,IAAID,MAAM,CAACE,kBAAkB,EAAE,CAAC;QAC7E,MAAMC,UAAU,GAAGJ,YAAY,CAACK,gBAAgB,CAAC,CAAC;QAClD,MAAMC,QAAQ,GAAGN,YAAY,CAACO,UAAU,CAAC,CAAC;QAC1C,MAAMe,MAAM,GAAGtB,YAAY,CAACuB,kBAAkB,CAAC,CAAC;QAEhDnB,UAAU,CAACI,OAAO,CAACc,MAAM,CAAC;QAC1BA,MAAM,CAACd,OAAO,CAACF,QAAQ,CAAC;QACxBA,QAAQ,CAACE,OAAO,CAACR,YAAY,CAACS,WAAW,CAAC;;QAE1C;QACA,QAAQY,SAAS;UACf,KAAK,eAAe;YAClBjB,UAAU,CAACM,SAAS,CAACC,cAAc,CAAC,GAAG,EAAEX,YAAY,CAACY,WAAW,CAAC;YAClER,UAAU,CAACM,SAAS,CAACc,4BAA4B,CAAC,GAAG,EAAExB,YAAY,CAACY,WAAW,GAAG,GAAG,CAAC;YACtFR,UAAU,CAACS,IAAI,GAAG,QAAQ;YAC1BS,MAAM,CAACT,IAAI,GAAG,UAAU;YACxBS,MAAM,CAACZ,SAAS,CAACC,cAAc,CAAC,GAAG,EAAEX,YAAY,CAACY,WAAW,CAAC;YAC9D;UAEF,KAAK,qBAAqB;YACxBR,UAAU,CAACM,SAAS,CAACC,cAAc,CAAC,GAAG,EAAEX,YAAY,CAACY,WAAW,CAAC;YAClER,UAAU,CAACM,SAAS,CAACc,4BAA4B,CAAC,GAAG,EAAExB,YAAY,CAACY,WAAW,GAAG,GAAG,CAAC;YACtFR,UAAU,CAACS,IAAI,GAAG,UAAU;YAC5BS,MAAM,CAACT,IAAI,GAAG,UAAU;YACxBS,MAAM,CAACZ,SAAS,CAACC,cAAc,CAAC,GAAG,EAAEX,YAAY,CAACY,WAAW,CAAC;YAC9D;UAEF,KAAK,uBAAuB;YAC1BR,UAAU,CAACM,SAAS,CAACC,cAAc,CAAC,IAAI,EAAEX,YAAY,CAACY,WAAW,CAAC;YACnER,UAAU,CAACM,SAAS,CAACc,4BAA4B,CAAC,GAAG,EAAExB,YAAY,CAACY,WAAW,GAAG,GAAG,CAAC;YACtFR,UAAU,CAACS,IAAI,GAAG,QAAQ;YAC1BS,MAAM,CAACT,IAAI,GAAG,SAAS;YACvBS,MAAM,CAACZ,SAAS,CAACC,cAAc,CAAC,GAAG,EAAEX,YAAY,CAACY,WAAW,CAAC;YAC9D;UAEF,KAAK,mBAAmB;YACtBR,UAAU,CAACM,SAAS,CAACC,cAAc,CAAC,IAAI,EAAEX,YAAY,CAACY,WAAW,CAAC;YACnER,UAAU,CAACM,SAAS,CAACc,4BAA4B,CAAC,GAAG,EAAExB,YAAY,CAACY,WAAW,GAAG,GAAG,CAAC;YACtFR,UAAU,CAACS,IAAI,GAAG,UAAU;YAC5BS,MAAM,CAACT,IAAI,GAAG,UAAU;YACxBS,MAAM,CAACZ,SAAS,CAACC,cAAc,CAAC,IAAI,EAAEX,YAAY,CAACY,WAAW,CAAC;YAC/D;UAEF,KAAK,mBAAmB;YACtBR,UAAU,CAACM,SAAS,CAACC,cAAc,CAAC,GAAG,EAAEX,YAAY,CAACY,WAAW,CAAC;YAClER,UAAU,CAACM,SAAS,CAACc,4BAA4B,CAAC,GAAG,EAAExB,YAAY,CAACY,WAAW,GAAG,GAAG,CAAC;YACtFR,UAAU,CAACS,IAAI,GAAG,MAAM;YACxBS,MAAM,CAACT,IAAI,GAAG,UAAU;YACxBS,MAAM,CAACZ,SAAS,CAACC,cAAc,CAAC,GAAG,EAAEX,YAAY,CAACY,WAAW,CAAC;YAC9D;UAEF;YACER,UAAU,CAACM,SAAS,CAACC,cAAc,CAAC,GAAG,EAAEX,YAAY,CAACY,WAAW,CAAC;YAClER,UAAU,CAACS,IAAI,GAAG,MAAM;QAC5B;;QAEA;QACAP,QAAQ,CAACQ,IAAI,CAACH,cAAc,CAAC,CAAC,EAAEX,YAAY,CAACY,WAAW,CAAC;QACzDN,QAAQ,CAACQ,IAAI,CAACW,uBAAuB,CAACpD,MAAM,GAAG,GAAG,EAAE2B,YAAY,CAACY,WAAW,GAAG,IAAI,CAAC;QACpFN,QAAQ,CAACQ,IAAI,CAACU,4BAA4B,CAAC,KAAK,EAAExB,YAAY,CAACY,WAAW,GAAG,GAAG,CAAC;QAEjFR,UAAU,CAACc,KAAK,CAAClB,YAAY,CAACY,WAAW,CAAC;QAC1CR,UAAU,CAACR,IAAI,CAACI,YAAY,CAACY,WAAW,GAAG,GAAG,CAAC;QAE/CpC,mBAAmB,CAAC6C,SAAS,CAAC;QAC9BK,UAAU,CAAC,MAAMlD,mBAAmB,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC;MAClD,CAAC;MACDH,MAAM,EAAEA,CAAA,KAAM,CAAC,CAAC;MAChBuB,IAAI,EAAEA,CAAA,KAAM,CAAC,CAAC;MACdC,MAAM,EAAEA,CAAA,KAAM,CAAC;IACjB,CAAC;EACH,CAAC;;EAED;EACA,MAAM8B,cAAc,GAAIC,SAAS,IAAK;IACpC,IAAI,CAACzD,YAAY,IAAI,CAACyD,SAAS,EAAE;IAEjC,MAAM7B,KAAK,GAAGtB,UAAU,CAACG,OAAO,CAACgD,SAAS,CAAC;IAC3C,IAAI7B,KAAK,IAAIA,KAAK,CAACoB,IAAI,EAAE;MACvBpB,KAAK,CAAC1B,MAAM,CAACA,MAAM,CAAC;MACpB0B,KAAK,CAACoB,IAAI,CAAC,CAAC;MACZ3C,mBAAmB,CAACoD,SAAS,CAAC;;MAE9B;MACAF,UAAU,CAAC,MAAM;QACflD,mBAAmB,CAAC,IAAI,CAAC;MAC3B,CAAC,EAAE,IAAI,CAAC;IACV;EACF,CAAC;;EAED;EACA,MAAMqD,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAInD,WAAW,CAACE,OAAO,IAAIT,YAAY,EAAE;MACvC,IAAIO,WAAW,CAACE,OAAO,CAACP,MAAM,EAAE;QAC9BK,WAAW,CAACE,OAAO,CAACP,MAAM,CAACA,MAAM,GAAG,GAAG,CAAC;MAC1C;MACA,IAAIK,WAAW,CAACE,OAAO,CAACuC,IAAI,EAAE;QAC5BzC,WAAW,CAACE,OAAO,CAACuC,IAAI,CAAC,CAAC;MAC5B;IACF;EACF,CAAC;;EAED;EACA,MAAMW,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAIpD,WAAW,CAACE,OAAO,IAAIF,WAAW,CAACE,OAAO,CAACgB,IAAI,EAAE;MACnDlB,WAAW,CAACE,OAAO,CAACgB,IAAI,CAAC,CAAC;IAC5B;EACF,CAAC;;EAED;EACA,MAAMmC,kBAAkB,GAAIC,SAAS,IAAK;IACxC1D,SAAS,CAAC0D,SAAS,CAAC;IACpB,IAAItD,WAAW,CAACE,OAAO,IAAIF,WAAW,CAACE,OAAO,CAACP,MAAM,EAAE;MACrDK,WAAW,CAACE,OAAO,CAACP,MAAM,CAAC2D,SAAS,GAAG,GAAG,CAAC;IAC7C;IACAzC,MAAM,CAACO,MAAM,CAACrB,UAAU,CAACG,OAAO,CAAC,CAACa,OAAO,CAACM,KAAK,IAAI;MACjD,IAAIA,KAAK,IAAIA,KAAK,CAAC1B,MAAM,EAAE;QACzB0B,KAAK,CAAC1B,MAAM,CAAC2D,SAAS,CAAC;MACzB;IACF,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxB7D,eAAe,CAAC,CAACD,YAAY,CAAC;IAC9B,IAAI,CAACA,YAAY,EAAE;MACjB0D,YAAY,CAAC,CAAC;IAChB,CAAC,MAAM;MACLC,WAAW,CAAC,CAAC;IACf;EACF,CAAC;;EAED;EACAnE,SAAS,CAAC,MAAM;IACdsC,MAAM,CAAChC,YAAY,GAAG;MACpB0D,cAAc;MACdE,YAAY;MACZC,WAAW;MACXG,WAAW;MACX3D,SAAS,EAAEyD,kBAAkB;MAC7BG,SAAS,EAAEA,CAAA,KAAM/D,YAAY;MAC7BgE,SAAS,EAAEA,CAAA,KAAM9D;IACnB,CAAC;EACH,CAAC,EAAE,CAACF,YAAY,EAAEE,MAAM,CAAC,CAAC;EAE1B,oBACEL,OAAA;IAAKoE,SAAS,EAAC,yBAAyB;IAAAC,QAAA,eACtCrE,OAAA;MAAKoE,SAAS,EAAC,wCAAwC;MAAAC,QAAA,gBAErDrE,OAAA;QACEsE,OAAO,EAAEL,WAAY;QACrBG,SAAS,EAAE,wEACTjE,YAAY,GACR,gCAAgC,GAChC,4BAA4B,EAC/B;QACHoE,KAAK,EAAEpE,YAAY,GAAG,gBAAgB,GAAG,eAAgB;QAAAkE,QAAA,EAExDlE,YAAY,GAAG,IAAI,GAAG;MAAI;QAAAqE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrB,CAAC,EAGRxE,YAAY,iBACXH,OAAA;QAAKoE,SAAS,EAAC,yBAAyB;QAAAC,QAAA,gBACtCrE,OAAA;UACE6C,IAAI,EAAC,OAAO;UACZ+B,GAAG,EAAC,GAAG;UACPC,GAAG,EAAC,GAAG;UACPC,IAAI,EAAC,KAAK;UACVC,KAAK,EAAE1E,MAAO;UACd2E,QAAQ,EAAGC,CAAC,IAAKlB,kBAAkB,CAACmB,UAAU,CAACD,CAAC,CAACE,MAAM,CAACJ,KAAK,CAAC,CAAE;UAChEX,SAAS,EAAC,gEAAgE;UAC1EgB,KAAK,EAAE;YACLC,UAAU,EAAE,iDAAiDhF,MAAM,GAAG,GAAG,cAAcA,MAAM,GAAG,GAAG;UACrG;QAAE;UAAAmE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACF3E,OAAA;UAAMoE,SAAS,EAAC,2BAA2B;UAAAC,QAAA,EACxCrB,IAAI,CAACsC,KAAK,CAACjF,MAAM,GAAG,GAAG;QAAC;UAAAmE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CACN,EAGApE,gBAAgB,iBACfP,OAAA;QAAKoE,SAAS,EAAC,yBAAyB;QAAAC,QAAA,gBACtCrE,OAAA;UAAKoE,SAAS,EAAC;QAAiD;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACnE3E,OAAA;UAAMoE,SAAS,EAAC,wBAAwB;UAAAC,QAAA,EAAC;QAAC;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACzE,EAAA,CAlTID,YAAY;AAAAsF,EAAA,GAAZtF,YAAY;AAoTlB,eAAeA,YAAY;AAAC,IAAAsF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}